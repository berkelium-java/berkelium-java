<?xml version="1.0"?>
<project name="berkelium-java" default="all" basedir=".">

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="build/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<property environment="env" />
	<property file="user.build.properties" />
	<property file="build.properties" />

	<target name="detect-os" unless="sys.name">
		<if>
			<or>
				<equals arg1="${target.os}" arg2="linux32"/>
				<os name="linux" arch="i386" />
			</or>
			<then>
				<property name="sys.name" value="linux32" />
				<property name="sys.linux32" value="true" />
				<property name="sys.linux" value="true" />
				<property name="sys.bits" value="32" />
			</then>
		</if>

		<if>
			<or>
				<equals arg1="${target.os}" arg2="linux64"/>
				<os name="linux" arch="amd64" />
			</or>
			<then>
				<property name="sys.name" value="linux64" />
				<property name="sys.linux32" value="true" />
				<property name="sys.linux" value="true" />
				<property name="sys.bits" value="64" />
			</then>
		</if>

		<if>
			<or>
				<equals arg1="${target.os}" arg2="win32"/>
				<os family="windows" arch="x86" />
			</or>
			<then>
				<property name="sys.name" value="win32" />
				<property name="sys.win32" value="true" />
				<property name="sys.win" value="true" />
				<property name="sys.bits" value="32" />
			</then>
		</if>

		<if>
			<or>
				<equals arg1="${target.os}" arg2="win64"/>
				<os family="windows" arch="amd64" />
			</or>
			<then>
				<property name="sys.name" value="win64" />
				<property name="sys.win64" value="true" />
				<property name="sys.win" value="true" />
				<property name="sys.bits" value="64" />
			</then>
		</if>

		<!-- TODO: mac 32 / 64 ? -->
		<if>
			<or>
				<equals arg1="${target.os}" arg2="mac"/>
				<os name="Mac OS X" />
			</or>
			<then>
				<property name="sys.name" value="mac" />
				<property name="sys.mac" value="true" />
				<property name="sys.bits" value="64" />
			</then>
		</if>
	</target>

	<target name="env" depends="detect-os">
		<if>
			<isset property="sys.name" />
			<then>
				<echo>building for '${sys.name}'</echo>
			</then>
			<else>
				<fail>Unknown System</fail>
			</else>
		</if>

		<if>
			<and>
				<not>
					<isset property="env.JAVA_HOME" />
				</not>
				<not>
					<isset property="env.JDK_HOME" />
				</not>
			</and>
			<then>
				<fail>JAVA_HOME or JDK_HOME must be set</fail>
			</then>
		</if>

		<if>
			<available file="${env.JDK_HOME}/include" type="dir"/>
			<then>
				<property name="java.include" value="${env.JDK_HOME}/include" />
			</then>
			<elseif>
				<available file="${env.JAVA_HOME}/include" type="dir"/>
				<then>
					<property name="java.include" value="${env.JAVA_HOME}/include" />
				</then>
			</elseif>
			<else>
				<fail>JAVA_HOME or JDK_HOME must point to a JDK</fail>
			</else>
		</if>

		<if>
			<available file="${env.JDK_HOME}/include" type="dir"/>
			<then>
				<property name="java.include" value="${env.JDK_HOME}/include" />
			</then>
			<elseif>
				<available file="${env.JAVA_HOME}/include" type="dir"/>
				<then>
					<property name="java.include" value="${env.JAVA_HOME}/include" />
				</then>
			</elseif>
			<else>
				<fail>JAVA_HOME or JDK_HOME must point to a JDK</fail>
			</else>
		</if>

		<if>
			<isset property="berkelium.src" />
			<then>
				<property name="download.date" value="source" />
			</then>
			<else>
				<propertycopy from="download.date.${sys.name}" name="download.date" />
			</else>
		</if>

		<property name="basedir" location="." />
		<property name="target" location="build/target" />
		<property name="dist" location="build/dist" />
		<property name="download.name" value="berkelium-${sys.name}-${download.date}" />
		<property name="dist.dir" location="${dist}/${download.name}" />
		<property name="download.dir" location="build/downloads" />
		<property name="build" location="${target}/${download.name}" />
		<property name="native" location="${build}/package/org/berkelium/java/native" />

		<property name="source.java" location="${basedir}/src/main/java" />
		<property name="source.native" location="${basedir}/src/main/native" />
	</target>

	<target name="source">
		<if>
			<isset property="berkelium.src" />
			<then>
				<property name="source.include" location="${berkelium.src}/include" />
				<property name="source.lib" location="${berkelium.src}" />
				<property name="source.bin" location="${berkelium.src}" />
			</then>
			<else>
				<!-- download archive -->
				<if>
					<not>
						<available file="${download.dir}" type="dir"/>
					</not>
					<then>
						<mkdir dir="${download.dir}"/>
					</then>
				</if>
				<if>
					<isset property="sys.mac" />
					<then>
						<property name="download.ext" value="tgz" />
					</then>
					<else>
						<property name="download.ext" value="7z" />
					</else>
				</if>
				<if>
					<not>
						<available file="${download.dir}/${download.name}.${download.ext}"/>
					</not>
					<then>
						<get src="${download.base}${download.name}.${download.ext}" dest="${download.dir}/${download.name}.${download.ext}" />
					</then>
				</if>

				<property name="unpacked" location="${build}/berkelium-${sys.name}" />

				<if>
					<not>
						<available file="${unpacked}/extracted.txt" />
					</not>
					<then>
						<delete dir="${unpacked}" />
						<mkdir dir="${unpacked}" />
						<!-- extract archive -->
						<property name="download.target" location="${download.dir}/${download.name}.${download.ext}" />
						<if>
							<equals arg1="${download.ext}" arg2="tgz"/>
							<then>
								<!-- Extract tgz archives -->
								<exec dir="${build}" executable="tar" failonerror="true">
									<arg value="zxvf" />
									<arg value="${download.target}" />
								</exec>
							</then>
							<else>
								<!-- Extract 7z archives -->
								<exec dir="${build}" executable="7z" failonerror="true">
									<arg value="x" />
									<arg value="${download.target}" />
								</exec>
							</else>
						</if>
						<echo file="${unpacked}/extracted.txt" />

					</then>
				</if>

				<property name="source.include" location="${unpacked}/include" />
				<property name="source.lib" location="${unpacked}/lib" />
				<property name="source.bin" location="${unpacked}/bin" />
			</else>
		</if>
	</target>

	<target name="javac">
		<mkdir dir="${build}/classes" />
		<javac target="1.5" srcdir="src/main/java" excludes="org/berkelium/java/examples/**" destdir="${build}/classes" includeantruntime="false" classpath="build/lib/json_simple-1.1.jar" />
	</target>

	<target name="javah">
		<mkdir dir="${build}/javah" />
		<javah classpath="${build}/classes" destdir="${build}/javah">
			<class name="org.berkelium.java.impl.BufferImpl" />
			<class name="org.berkelium.java.impl.Context" />
			<class name="org.berkelium.java.impl.SingleThreadBerkelium" />
			<class name="org.berkelium.java.impl.WindowImpl" />
		</javah>
	</target>

	<target name="native-compile">
		<delete dir="${build}/target" />
		<mkdir dir="${build}/target" />
		<if>
			<isset property="sys.linux" />
			<then>
				<echo>compile...</echo>
				<exec executable="gcc" failonerror="true" dir="${build}/target">
					<arg value="-fPIC" />
					<arg value="-o" />
					<arg value="berkelium-java.o" />
					<arg value="-I${source.include}" />
					<arg value="-I${java.include}" />
					<arg value="-I${java.include}/linux" />
					<arg value="-I${build}/javah" />
					<arg value="-c" />
					<arg value="${basedir}/src/main/native/berkelium-java.cpp" />
				</exec>
				<echo>link...</echo>
				<exec executable="gcc" failonerror="true" dir="${build}/target">
					<arg value="-shared" />
					<arg value="-lstdc++" />
					<arg value="-L${source.lib}" />
					<arg value="-llibberkelium" />
					<arg value="-olibberkelium-java.so" />
					<arg value="berkelium-java.o" />
				</exec>
			</then>
		</if>
		<if>
			<isset property="sys.mac" />
			<then>
				<echo>compile...</echo>
				<exec executable="gcc" failonerror="true" dir="${build}/target">
					<arg value="-fPIC" />
					<arg value="-o" />
					<arg value="berkelium-java.o" />
					<arg value="-arch" />
					<arg value="i386" />
					<arg value="-I${source.include}" />
					<!-- Temporary hack because I don't feel like restarting my computer -->
					<arg value="-I/System/Library/Frameworks/JavaVM.framework/Headers" />
					<arg value="-I${basedir}/build/eclipse/bin/javah" />
					<arg value="-c" />
					<arg value="${basedir}/src/main/native/berkelium-java.cpp" />
				</exec>
				<echo>link...</echo>
				<exec executable="gcc" failonerror="true" dir="${build}/target">
					<arg value="-shared" />
					<arg value="-arch" />
					<arg value="i386" />
					<arg value="-lstdc++" />
					<arg value="-L${source.lib}" />
					<arg value="-llibberkelium" />
					<arg value="-o" />
					<arg value="libberkelium-java.jnilib" />
					<arg value="berkelium-java.o" />
				</exec>
			</then>
		</if>
		<if>
			<isset property="sys.win" />
			<then>
				<var name="cl" value="/DWIN${sys.bits} /EHsc /LD" />
				<var name="cl" value="${cl} /I&quot;${source.include}&quot;" />
				<var name="cl" value="${cl} /I&quot;${java.include}&quot;" />
				<var name="cl" value="${cl} /I&quot;${java.include}/${sys.name}&quot;" />
				<var name="cl" value="${cl} /I&quot;${build}/javah&quot;" />
				<var name="cl" value="${cl} &quot;${basedir}/src/main/native/berkelium-java.cpp&quot;" />
				<var name="cl" value="${cl} /link" />
				<var name="cl" value="${cl} &quot;${source.lib}/berkelium.lib&quot;" />

				<exec executable="cmd" failonerror="true" dir="${build}/target">
					<env key="ARGS" value="${cl}" />
					<env key="BASEDIR" value="${basedir}" />
					<arg value="/q" />
					<arg value="/c" />
					<arg value="call &quot;${basedir}/build/bin/cl.cmd&quot;" />
				</exec>
			</then>
		</if>
	</target>

	<target name="package" depends="javac,javah,native-compile">
		<delete dir="${build}/package" />
		<mkdir dir="${native}/${sys.name}" />
		<echo file="${native}/systemType.txt">${sys.name}</echo>
		<!--  copy binary files -->
		<copy todir="${native}/${sys.name}" overwrite="true">
			<fileset dir="${build}/target">
				<include name="*.dll" />
				<include name="*.so" />
			</fileset>
			<fileset dir="${source.bin}">
				<!-- resources -->
				<include name="*.pak" />
				<!-- windows files -->
				<include name="locales/*" />
				<include name="av*.dll" />
				<include name="icu*.dll" />
				<include name="berkelium.*" />
				<include name="ppmrenderer.exe" />
				<include name="wow_helper.exe" />
				<!-- linux files -->
				<include name="berkelium" />
				<include name="lib*.so" />
			</fileset>
			<fileset dir="${source.lib}">
				<include name="lib*.so" />
			</fileset>
		</copy>
		<if>
			<isset property="sys.linux" />
			<then>
				<chmod file="${native}/${sys.name}/berkelium" perm="+x" />
				<!--
				<exec executable="strip" failonerror="true" dir="${native}/${sys.name}">
					<arg value="berkelium" />
					<arg value="libberkelium-java.so" />
					<arg value="libberkelium.so" />
					<arg value="libffmpegsumo.so" />
				</exec>
				-->
			</then>
		</if>
		<pathconvert dirsep="/" pathsep=";" property="platform-files">
			<fileset dir="${native}/${sys.name}" includes="**" />
			<map from="${native}/${sys.name}/" to="" />
		</pathconvert>
		<echo message="${platform-files}" file="${native}/${sys.name}/dependencies.txt" />
	</target>

	<target name="jar" depends="env,source,package">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/berkelium-${sys.name}.jar" basedir="${build}/package">
			<fileset dir="${build}/classes">
				<include name="org/berkelium/java/impl/**" />
			</fileset>
		</jar>
		<jar destfile="${dist.dir}/berkelium-api.jar">
			<fileset dir="${build}/classes">
				<include name="org/berkelium/java/api/*" />
				<include name="org/berkelium/java/awt/*" />
			</fileset>
		</jar>
	</target>

	<target name="all" depends="jar" description="">
	</target>

	<target name="eclipse-internal" depends="env,source" description="">
		<if>
			<uptodate targetfile="${build}/lastbuild.txt">
				<srcfiles dir="${source.java}" includes="**/*.java" />
				<srcfiles dir="${source.native}" includes="**/*.cpp" />
				<srcfiles dir="${source.include}" includes="**/*.hpp" />
				<srcfiles dir="${source.lib}" includes="*.dll,*.so" />
			</uptodate>
			<then>
				<echo>already up to date</echo>
			</then>
			<else>
				<antcall target="package" />
				<tstamp />
				<echo file="${build}/lastbuild.txt">${DSTAMP}${TSTAMP}</echo>
			</else>
		</if>
	</target>

	<target name="eclipse" description="">
		<property name="build" location="build/eclipse" />
		<antcall target="eclipse-internal" />
	</target>

	<target name="clean" depends="env" description="">
		<delete dir="${target}" />
		<delete dir="${dist}" />
	</target>
</project>
