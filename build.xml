<?xml version="1.0"?>
<project name="berkelium-java" default="all" basedir=".">

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="build/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<property environment="env" />
	<property file="user.build.properties" />
	<property file="build.properties" />

	<target name="env">
		<if>
			<os name="linux" arch="i386" />
			<then>
				<property name="sys.name" value="linux32" />
				<property name="sys.linux32" value="true" />
				<property name="sys.linux" value="true" />
				<property name="sys.bits" value="32" />
			</then>
		</if>

		<if>
			<os name="linux" arch="amd64" />
			<then>
				<property name="sys.name" value="linux64" />
				<property name="sys.linux32" value="true" />
				<property name="sys.linux" value="true" />
				<property name="sys.bits" value="64" />
			</then>
		</if>

		<if>
			<os name="win" arch="x86" />
			<then>
				<property name="sys.name" value="win32" />
				<property name="sys.win32" value="true" />
				<property name="sys.win" value="true" />
				<property name="sys.bits" value="32" />
			</then>
		</if>

		<if>
			<os name="win" arch="amd64" />
			<then>
				<property name="sys.name" value="win64" />
				<property name="sys.win64" value="true" />
				<property name="sys.win" value="true" />
				<property name="sys.bits" value="64" />
			</then>
		</if>

		<if>
			<isset property="sys.name" />
			<then>
				<echo>building for '${sys.name}'</echo>
			</then>
			<else>
				<fail>Unknown System</fail>
			</else>
		</if>

		<if>
			<not>
				<isset property="env.JAVA_HOME" />
			</not>
			<then>
				<fail>JAVA_HOME not set</fail>
			</then>
		</if>

		<property name="target" location="build/target" />
		<property name="dist" location="build/dist" />
		<property name="download.dir" location="build/downloads" />

		<propertycopy from="download.date.${sys.name}" name="download.date" />
		<property name="download.name" value="berkelium-${sys.name}-${download.date}" />
		<property name="basedir" location="." />
	</target>

	<target name="prepare" depends="env">
		<if>
			<available file="${downloads_dir}/berkelium" />
			<then>
				<!--  copy header files -->
				<mkdir dir="${target}/include/berkelium" />
				<copy todir="${target}/include/berkelium" overwrite="true">
					<fileset dir="${downloads_dir}/berkelium/include/berkelium">
						<include name="*.hpp" />
					</fileset>
				</copy>

				<!--  copy library files -->
				<mkdir dir="${target}/lib" />
				<copy file="${downloads_dir}/berkelium/berkelium.lib" todir="${target}/lib" failonerror="false" overwrite="true" />

				<!--  copy binary files -->
				<mkdir dir="${target.bin}" />
				<copy todir="${target.bin}" overwrite="true">
					<fileset dir="${downloads_dir}/berkelium">
						<!-- resources -->
						<include name="*.pak" />
						<!-- windows files -->
						<include name="locales/*" />
						<include name="av*.dll" />
						<include name="icu*.dll" />
						<include name="berkelium.*" />
						<include name="ppmrenderer.exe" />
						<include name="wow_helper.exe" />
						<!-- linux files -->
						<include name="berkelium" />
						<include name="lib*.so" />
					</fileset>
				</copy>
				<copy file="${target.bin}/liblibberkelium.so" tofile="${target.bin}/libberkelium.so" overwrite="true" />
			</then>
			<else>
				<!-- download archive -->
				<if>
					<not>
						<available file="${download.dir}/${download.name}.7z" />
					</not>
					<then>
						<get src="${download.base}${download.name}.7z" dest="${download.dir}/${download.name}.7z" skipexisting="true" />
					</then>
				</if>

				<property name="unpacked" location="${target}/${download.name}" />
				<property name="unpacked.dir" location="${unpacked}/berkelium-${sys.name}" />

				<if>
					<not>
						<available file="${unpacked}/extracted.txt" />
					</not>
					<then>
						<delete dir="${unpacked}" />
						<mkdir dir="${unpacked}" />
						<!-- extract archive -->
						<property name="download.target" location="${download.dir}/${download.name}.7z" />
						<exec dir="${unpacked}" executable="7z" failonerror="true">
							<arg value="x" />
							<arg value="${download.target}" />
						</exec>
						<echo file="${unpacked}/extracted.txt" />
					</then>
				</if>

				<property name="source.include" location="${unpacked.dir}/include" />
				<property name="source.lib" location="${unpacked.dir}/lib" />
				<property name="source.bin" location="${unpacked.dir}/bin" />
			</else>
		</if>

		<!--
		<echo message="${platform}" file="${target.bin}/../systemType.txt" />
		<dirname file="${target.bin}/../systemType.txt" property="target.bin.abs" />
		<pathconvert dirsep="/" pathsep=";" property="platform-files">
			<fileset dir="${target.bin}" includes="**" />
			<map from="${target.bin.abs}/${platform}/" to="" />
		</pathconvert>
		<echo message="${platform-files}" file="${target.bin}/dependencies.txt" />
		-->
	</target>

	<target name="javac" depends="prepare">
		<mkdir dir="${unpacked}/classes" />
		<javac srcdir="src/main/java" destdir="${unpacked}/classes" includeantruntime="false" />
	</target>

	<target name="javah" depends="javac">
		<mkdir dir="${unpacked}/javah" />
		<javah classpath="${unpacked}/classes" destdir="${unpacked}/javah">
			<class name="org.berkelium.java.impl.BufferImpl" />
			<class name="org.berkelium.java.impl.Context" />
			<class name="org.berkelium.java.impl.Platform" />
			<class name="org.berkelium.java.impl.WindowImpl" />
		</javah>
	</target>

	<target name="compile-linux" depends="javah" if="sys.linux">
		<delete dir="${unpacked}/target" />
		<mkdir dir="${unpacked}/target" />
		<echo>compile...</echo>
		<exec executable="gcc" failonerror="true" dir="${unpacked}/target">
			<arg value="-fPIC" />
			<arg value="-o" />
			<arg value="berkelium-java.o" />
			<arg value="-I${source.include}" />
			<arg value="-I${env.JAVA_HOME}include" />
			<arg value="-I${env.JAVA_HOME}include/linux" />
			<arg value="-I${unpacked}/javah" />
			<arg value="-c" />
			<arg value="${basedir}/src/main/native/berkelium-java.cpp" />
		</exec>
		<echo>link...</echo>
		<exec executable="gcc" failonerror="true" dir="${unpacked}/target">
			<arg value="-shared" />
			<arg value="-lstdc++" />
			<arg value="-L${unpacked.dir}/lib" />
			<arg value="-llibberkelium" />
			<arg value="-olibberkelium-java.so" />
			<arg value="berkelium-java.o" />
		</exec>
	</target>

	<target name="compile-win" depends="javah" if="sys.win">
		<var name="cl" value="/DWIN${sys.bits} /EHsc /LD" />
		<var name="cl" value="${cl} /I&quot;${source.include}&quot;" />
		<var name="cl" value="${cl} /I&quot;${env.JAVA_HOME}/include&quot;" />
		<var name="cl" value="${cl} /I&quot;${env.JAVA_HOME}/include/${sys.name}&quot;" />
		<var name="cl" value="${cl} /I&quot;${unpacked}/javah&quot;" />
		<var name="cl" value="${cl} &quot;${basedir}/src/main/native/berkelium-java.cpp&quot;" />
		<var name="cl" value="${cl} /link" />
		<var name="cl" value="${cl} &quot;${unpacked.dir}/lib/berkelium.lib&quot;" />

		<delete dir="${unpacked}/target" />
		<mkdir dir="${unpacked}/target" />
		<exec executable="cmd" failonerror="true" dir="${unpacked}/target">
			<env key="ARGS" value="${cl}" />
			<env key="BASEDIR" value="${basedir}" />
			<arg value="/q" />
			<arg value="/c" />
			<arg value="call &quot;${basedir}/build/bin/cl.cmd&quot;" />
		</exec>
	</target>

	<target name="compile" depends="compile-win,compile-linux" />

	<target name="package" depends="compile">
		<delete dir="${unpacked}/package" />
		<property name="native" location="${unpacked}/package/org/berkelium/java/native" />
		<mkdir dir="${native}/${sys.name}" />
		<echo file="${native}/systemType.txt">${sys.name}</echo>
		<!--  copy binary files -->
		<copy todir="${native}/${sys.name}" overwrite="true">
			<fileset dir="${unpacked}/target">
				<include name="*.dll" />
				<include name="*.so" />
			</fileset>
			<fileset dir="${unpacked.dir}/bin">
				<!-- resources -->
				<include name="*.pak" />
				<!-- windows files -->
				<include name="locales/*" />
				<include name="av*.dll" />
				<include name="icu*.dll" />
				<include name="berkelium.*" />
				<include name="ppmrenderer.exe" />
				<include name="wow_helper.exe" />
				<!-- linux files -->
				<include name="berkelium" />
				<include name="lib*.so" />
			</fileset>
		</copy>
		<if>
			<available file="${unpacked.dir}/lib/liblibberkelium.so" />
			<then>
				<copy file="${unpacked.dir}/lib/liblibberkelium.so" tofile="${native}/${sys.name}/libberkelium.so" />
			</then>
		</if>
	</target>

	<target name="jar" depends="package">
		<property name="dist.dir" location="${dist}/${download.name}" />
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/berkelium-${sys.name}.jar" basedir="${unpacked}/package" />
	</target>

	<target name="all" depends="jar" description="">
	</target>

	<target name="clean" description="">
		<delete dir="${target}" />
		<delete dir="${dist}" />
	</target>
</project>
