<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.berkelium.java</groupId>
		<artifactId>berkelium</artifactId>
		<version>0.9.4</version>
	</parent>

	<name>org.berkelium.java: native code parent project</name>
	<artifactId>native</artifactId>
	<packaging>pom</packaging>

	<profiles>
		<profile>
			<id>berkelium-runtime-native-win32</id>

			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<modules>
				<module>win32</module>
			</modules>
			<properties>
				<platform>win32</platform>
				<download_date>beta-2011-04-29</download_date>
			</properties>
		</profile>
		<profile>
			<id>berkelium-runtime-native-linux64</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>x64</arch>
				</os>
			</activation>
			<modules>
				<module>linux64</module>
			</modules>
			<properties>
				<platform>linux64</platform>
				<download_date>beta-2011-04-29</download_date>
			</properties>
		</profile>
		<profile>
			<id>berkelium-runtime-native-linux32</id>
			<activation>
				<os>
					<family>linux</family>
					<!--
					<arch>x86</arch>
					-->
				</os>
			</activation>
			<modules>
				<module>linux32</module>
			</modules>
			<properties>
				<platform>linux32</platform>
				<download_date>beta-2011-04-29</download_date>
			</properties>
		</profile>
	</profiles>
	
	<properties>
		<target>${basedir}/target</target>
		<target.bin>${target}/classes/org/berkelium/java/native/${platform}</target.bin>

		<download_unpacked>berkelium-${platform}</download_unpacked>
		<download_name>berkelium-${platform}-${download_date}.7z</download_name>
		<download_base>http://cloud.github.com/downloads/sirikata/berkelium/</download_base>
		<download_src>${download_base}${download_name}</download_src>
		<downloads_dir>${basedir}/../downloads</downloads_dir>
		<download_dest_file>${downloads_dir}/${download_name}</download_dest_file>

		<unpack_base_dir>${target}/unpack</unpack_base_dir>
		<unpacked>${unpack_base_dir}/${download_unpacked}</unpacked>
	</properties>

	<build>
		<plugins>
		<!--
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>target</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>enforce-property</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>platform</property>
									<message>failed to detect platform: property "platform" is not set</message>
									<regex>(win|linux)(32|64)</regex>
									<regexMessage>unexpected platform: ${platform}</regexMessage>
								</requireProperty>
								<requireProperty>
									<property>env.JAVA_HOME</property>
									<message>JAVA_HOME not set</message>
								</requireProperty>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-berkelium-7z</id>
						<phase>generate-sources</phase>
						<configuration>
							<target if="in_platform_pom">
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

								<available file="${downloads_dir}/berkelium" property="downloads_dir_present"/>
								<if>
									<equals arg1="${downloads_dir_present}" arg2="true" />
									<then>
										<!--  copy header files -->
										<mkdir dir="${target}/include/berkelium" />
										<copy todir="${target}/include/berkelium" overwrite="true">
											<fileset dir="${downloads_dir}/berkelium/include/berkelium">
												<include name="*.hpp" />
											</fileset>
										</copy>

										<!--  copy library files -->
										<mkdir dir="${target}/lib" />
										<copy file="${downloads_dir}/berkelium/berkelium.lib" todir="${target}/lib" 
											failonerror="false" overwrite="true"/>

										<!--  copy binary files -->
										<mkdir dir="${target.bin}" />
										<copy todir="${target.bin}" overwrite="true">
											<fileset dir="${downloads_dir}/berkelium">
												<!-- resources -->
												<include name="*.pak" />
												<!-- windows files -->
												<include name="locales/*" />
												<include name="av*.dll" />
												<include name="icu*.dll" />
												<include name="berkelium.*" />
												<include name="ppmrenderer.exe" />
												<include name="wow_helper.exe" />
												<!-- linux files -->
												<include name="berkelium" />
												<include name="lib*.so" />
											</fileset>
										</copy>
										<copy file="${target.bin}/liblibberkelium.so" tofile="${target.bin}/libberkelium.so" overwrite="true"/>
									</then>
									<else>
										<!--
										<isset property="unpacked"/>
										-->
										<!-- download archive -->
										<get src="${download_src}" dest="${download_dest_file}"
											skipexisting="true" />

										<mkdir dir="${unpack_base_dir}" />

										<!-- extract archive -->
										<exec dir="${unpack_base_dir}" executable="7z">
											<arg value="x" />
											<arg value="${download_dest_file}" />
										</exec>

										<!--  copy header files -->
										<mkdir dir="${target}/include/berkelium" />
										<copy todir="${target}/include/berkelium" overwrite="true">
											<fileset dir="${unpacked}/include/berkelium">
												<include name="*.hpp" />
											</fileset>
										</copy>

										<!--  copy library files -->
										<mkdir dir="${target}/lib" />
										<copy file="${unpacked}/lib/berkelium.lib" todir="${target}/lib" 
											failonerror="false" overwrite="true"/>

										<!--  copy binary files -->
										<mkdir dir="${target.bin}" />
										<copy todir="${target.bin}" overwrite="true">
											<fileset dir="${target}/unpack/${download_unpacked}/bin">
												<!-- resources -->
												<include name="*.pak" />
												<!-- windows files -->
												<include name="locales/*" />
												<include name="av*.dll" />
												<include name="icu*.dll" />
												<include name="berkelium.*" />
												<include name="ppmrenderer.exe" />
												<include name="wow_helper.exe" />
												<!-- linux files -->
												<include name="berkelium" />
											</fileset>
											<fileset dir="${target}/unpack/${download_unpacked}/lib">
												<!-- linux files -->
												<include name="lib*.so" />
											</fileset>
										</copy>

										<copy file="${target.bin}/liblibberkelium.so"
											tofile="${target.bin}/libberkelium.so" failonerror="false" />
									</else>
								</if>

								<echo message="${platform}" file="${target.bin}/../systemType.txt" />
								<dirname file="${target.bin}/../systemType.txt" property="target.bin.abs" />
								<pathconvert dirsep="/" pathsep=";" property="platform-files">
									<fileset dir="${target.bin}" includes="**" />
									<map from="${target.bin.abs}/${platform}/" to="" />
								</pathconvert>
								<echo message="${platform-files}" file="${target.bin}/dependencies.txt" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native-maven-plugin</artifactId>
					<extensions>true</extensions>
					<configuration>
						<sources>
							<source>
								<directory>${basedir}/../src/main/native</directory>
								<fileNames>
									<fileName>berkelium-java.cpp</fileName>
								</fileNames>
							</source>
						</sources>
					</configuration>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>javah</goal>
							</goals>
							<configuration>
								<javahOutputDirectory>${basedir}/../../target/native</javahOutputDirectory>
								<!-- <javahOS>win32</javahOS> -->
								<javahClassNames>
									<javahClassName>org.berkelium.java.BufferImpl</javahClassName>
									<javahClassName>org.berkelium.java.Context</javahClassName>
									<javahClassName>org.berkelium.java.Platform</javahClassName>
									<javahClassName>org.berkelium.java.WindowImpl</javahClassName>
								</javahClassNames>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											native-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-7,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>initialize</goal>
											<goal>javah</goal>
											<goal>link</goal>
											<goal>unzipinc</goal>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<!-- this dependency is required for javah to find the classes -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>runtime-java</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
</project>